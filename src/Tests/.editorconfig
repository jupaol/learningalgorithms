# editorconfig.org

# Top-most EditorConfig file
root = true

# All files:
[*]
# (Please don't specify an indent_size here; that has too many unintended consequences.)
indent_style = tab
tab_width = unset
insert_final_newline = true
trim_trailing_whitespace = true

# Xml files
[*.{xml}]
indent_size = 2

# Xml configuration files
[*.{config,x}]
indent_size = 2

# Xml project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_style = space
indent_size = 2

# Other Xml files
[*.{props,targets,nuspec,resx,vsixmanifest,vsct,ruleset}]
indent_style = space
indent_size = 2

# JSON files
[*.json]
indent_style = space
indent_size = 2

# Docker compose
[*.yml]
indent_style = space
indent_size = 2

# Docker
[dockerfile]
indent_style = space
indent_size = 2

# Nginx
[*.conf]
indent_style = space
indent_size = 4

# Web files
[*.{js,ts,css,scss,less}]
indent_size = 4

# Web markup files
[*.{htm,html}]
indent_size = 2

# Scripts
[*.{cmd,bat}]
indent_style = space
end_of_line = crlf

# .NET code files
[*.{cs,csx,vb,vbx}]
indent_style = tab
indent_size = 4
charset = utf-8-bom

# SpecFlow feature files
[*.{feature}]
indent_size = 2

#### .NET code style
#### https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
#### https://kent-boogaart.com/blog/editorconfig-reference-for-c-developers

### .NET naming conventions (IDE0006)
### https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-naming-conventions

## Styles
# camel_case
dotnet_naming_style.camel_case.capitalization = camel_case
# pascal_case
dotnet_naming_style.pascal_case.capitalization = pascal_case
# starts_with_i
dotnet_naming_style.starts_with_i.capitalization = pascal_case
dotnet_naming_style.starts_with_i.required_prefix = I

## Symbols
# interfaces
dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = *
# types
dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = *
# constants
dotnet_naming_symbols.constants.applicable_kinds = field
dotnet_naming_symbols.constants.applicable_accessibilities = *
dotnet_naming_symbols.constants.required_modifiers = const
# static_readonly_fields
dotnet_naming_symbols.static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.static_readonly_fields.applicable_accessibilities = *
dotnet_naming_symbols.static_readonly_fields.required_modifiers = static, readonly
# private_fields
dotnet_naming_rule.private_members_with_underscore.symbols  = private_fields
dotnet_naming_rule.private_members_with_underscore.style    = prefix_underscore
dotnet_naming_rule.private_members_with_underscore.severity = error
dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private
dotnet_naming_style.prefix_underscore.capitalization = camel_case
dotnet_naming_style.prefix_underscore.required_prefix = _
# non_private_fields
dotnet_naming_symbols.non_private_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_fields.applicable_accessibilities = public, internal, friend, protected, protected_internal, protected_friend
# non_field_members
dotnet_naming_symbols.non_field_members.applicable_kinds = property, method, event
dotnet_naming_symbols.non_field_members.applicable_accessibilities = *
# parameters
dotnet_naming_symbols.parameters.applicable_kinds = parameter

## Rule definitions
# parameters_must_be_camel_case
dotnet_naming_rule.parameters_must_be_camel_case.symbols = parameters
dotnet_naming_rule.parameters_must_be_camel_case.style = camel_case
dotnet_naming_rule.parameters_must_be_camel_case.severity = error
# interfaces_must_start_with_i
dotnet_naming_rule.interfaces_must_start_with_i.symbols = interfaces
dotnet_naming_rule.interfaces_must_start_with_i.style = starts_with_i
dotnet_naming_rule.interfaces_must_start_with_i.severity = error
# types_must_be_pascal_case
dotnet_naming_rule.types_must_be_pascal_case.symbols = types
dotnet_naming_rule.types_must_be_pascal_case.style = pascal_case
dotnet_naming_rule.types_must_be_pascal_case.severity = error
# constants_must_be_pascal_case
dotnet_naming_rule.constants_must_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_must_be_pascal_case.style = pascal_case
dotnet_naming_rule.constants_must_be_pascal_case.severity = error
# static_readonly_fields_must_be_pascal_case
dotnet_naming_rule.static_readonly_fields_must_be_pascal_case.symbols = static_readonly_fields
dotnet_naming_rule.static_readonly_fields_must_be_pascal_case.style = pascal_case
dotnet_naming_rule.static_readonly_fields_must_be_pascal_case.severity = error
# private_fields_must_be_camel_case
dotnet_naming_rule.private_fields_must_be_camel_case.symbols = private_fields
dotnet_naming_rule.private_fields_must_be_camel_case.style = camel_case
dotnet_naming_rule.private_fields_must_be_camel_case.severity = error
# non_private_fields_must_be_pascal_case
# (We don't allow non-private fields, but enforce this anyway in case that rule is suppressed.)
dotnet_naming_rule.non_private_fields_must_be_pascal_case.symbols = non_private_fields
dotnet_naming_rule.non_private_fields_must_be_pascal_case.style = pascal_case
dotnet_naming_rule.non_private_fields_must_be_pascal_case.severity = error
# non_field_members_must_be_pascal_case
dotnet_naming_rule.non_field_members_must_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_must_be_pascal_case.style = pascal_case
dotnet_naming_rule.non_field_members_must_be_pascal_case.severity = error

### .NET language and formatting conventions
### https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference

# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true

# "this." and "Me." settings (IDE0003, IDE0009)
dotnet_style_qualification_for_field = false:error
dotnet_style_qualification_for_property = false:error
dotnet_style_qualification_for_method = false:error
dotnet_style_qualification_for_event = false:error

# Use language keywords instead of framework type names for type references
# IDE0012, IDE0014
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
# IDE0013, IDE0015
dotnet_style_predefined_type_for_member_access = true:warning

# Suggest more modern language features when available
# IDE0017
dotnet_style_object_initializer = true:warning
# IDE0028
dotnet_style_collection_initializer = true:warning
# IDE0033
dotnet_style_explicit_tuple_names = true:warning
# IDE0037
dotnet_style_prefer_inferred_tuple_names = true:warning
# IDE0037
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion

dotnet_style_prefer_conditional_expression_over_assignment = true:warning
dotnet_style_prefer_conditional_expression_over_return = true:warning

# Modifier preferences
# IDE0040
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
# IDE0044
dotnet_style_readonly_field = true:warning

# "Null" checking preferences
# IDE0029
dotnet_style_coalesce_expression = true:warning
# IDE0031
dotnet_style_null_propagation = true:warning

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:none
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:suggestion

# CSharp code style settings:
[*.{cs,csx}]

# "var" preferences (IDE0007, IDE0008)
csharp_style_var_for_built_in_types = false:none
csharp_style_var_when_type_is_apparent = true:none
csharp_style_var_elsewhere = false:none

# Prefer method-like constructs to have a block body
# IDE0022
csharp_style_expression_bodied_methods = false:none
# IDE0021
csharp_style_expression_bodied_constructors = false:none
# IDE0023, IDE0024
csharp_style_expression_bodied_operators = false:none

# Prefer property-like constructs to have an expression-body
# IDE0025
csharp_style_expression_bodied_properties = when_on_single_line:none
# IDE0026
csharp_style_expression_bodied_indexers = when_on_single_line:none
# IDE0027
csharp_style_expression_bodied_accessors = when_on_single_line:none

# Modifier preferences
# IDE0036
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# Suggest more modern language features when available
# IDE0020
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
# IDE0019
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# IDE0018
csharp_style_inlined_variable_declaration = true:suggestion
# IDE0034
csharp_prefer_simple_default_expression = true:suggestion
# IDE0042
csharp_style_deconstructed_variable_declaration = true: suggestion
# IDE0039
csharp_style_pattern_local_over_anonymous_function = true:suggestion

# "Null" checking preferences
# IDE0016
csharp_style_throw_expression = true:suggestion
# IDE0041
csharp_style_conditional_delegate_call = true:suggestion

# Code block preferences
# IDE0011
csharp_prefer_braces = true:warning

# Indentation options
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = no_change

# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Spacing options
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping options
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

# Re-Sharper
[resharper_]csharp_wrap_parameters_style = chop_if_long
